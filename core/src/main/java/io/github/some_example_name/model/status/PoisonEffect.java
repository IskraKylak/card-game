package io.github.some_example_name.model.status;

import io.github.some_example_name.model.CombatEntity;
import io.github.some_example_name.model.Entity;

public class PoisonEffect extends AbstractStatusEffect {
  private final int damagePerTurn;
  private final int initialDuration;

  public PoisonEffect(int duration, int amount, TargetingRule targetingRule, int targetCount) {
    super("Poison", duration, StatusType.DEBUFF, targetingRule, targetCount); // ‚Üê —É–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–±–∞—Ñ
    this.damagePerTurn = amount;
    this.initialDuration = duration;
  }

  @Override
  public void onApply(Entity target) {
    System.out.println("üí• onApply –Ω–∏—Ö—É—è –Ω–µ –Ω–∞–Ω–æ—Å–∏—Ç" + target);
  }

  @Override
  public void onTurnStart(Entity target) {
    System.out.println("üí• onTurnStart –Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω " + target + ": " + damagePerTurn);

    target.takeDamage(damagePerTurn);
  }

  @Override
  public PoisonEffect copy() {
    return new PoisonEffect(this.initialDuration, damagePerTurn, getTargetingRule(), getTargetCount());
  }
}
